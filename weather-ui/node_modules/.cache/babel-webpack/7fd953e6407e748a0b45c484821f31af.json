{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\nimport { map, startWith } from 'rxjs/operators';\nimport { OptionsComponent } from './options/options.component';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { ChartComponent } from './chart/chart.component';\nimport { configs } from './configs/configs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/autocomplete\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"ag-grid-angular\";\nimport * as i9 from \"@angular/router\";\nimport * as i10 from \"@angular/material/core\";\n\nfunction AppComponent_mat_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(http, dialog) {\n      this.http = http;\n      this.dialog = dialog;\n      this.title = 'sample-ui';\n      this.myControl = new FormControl();\n      this.options = [];\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        })\n      }; // can take any variable here and this variable can be accessed in the app.component.html file using {{ varName.varInside}}\n\n      this.data = {\n        courseTitle: 'My title'\n      }; // data from the data file\n      //cityDetails = CITYDATA[0];\n      /// ag grid \n\n      this.frameworkComponents = {\n        options: OptionsComponent\n      };\n      this.columnDefs = [{\n        field: 'Date',\n        sortable: true,\n        sort: 'desc',\n        filter: 'agTextColumnFilter'\n      }, {\n        field: 'Day_Min_Temp',\n        filter: 'agTextColumnFilter'\n      }, {\n        field: 'Day_Max_Temp',\n        filter: 'agTextColumnFilter'\n      }, {\n        field: 'Wind_Speed',\n        filter: 'agTextColumnFilter'\n      }, {\n        field: 'Description',\n        filter: 'agTextColumnFilter'\n      }, {\n        field: 'Suggestion',\n        filter: 'agTextColumnFilter'\n      }, {\n        field: 'City',\n        hide: true\n      }, {\n        headerName: '',\n        field: 'icon',\n        cellRenderer: 'options',\n        pinned: 'right'\n      }];\n      this.rowData = [{\n        Date: 'Toyota',\n        Day_Min_Temp: 'Celica',\n        Day_Max_Temp: 35000\n      }, {\n        Date: 'Ford',\n        Day_Min_Temp: 'Mondeo',\n        Day_Max_Temp: 32000\n      }, {\n        Date: 'Porsche',\n        Day_Min_Temp: 'Boxter',\n        Day_Max_Temp: 72000\n      }];\n      this.dRowData = [{\n        Date: 'Toyota',\n        Day_Min_Temp: 'Celica',\n        Day_Max_Temp: 35000\n      }]; // pagination\n      // enables pagination in the grid\n\n      this.pagination = true; // sets 10 rows per page (default is 100)\n\n      this.paginationPageSize = 3;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        })\n      };\n      this.http.get(configs.baseUrl + '/city/detail', this.httpOptions).subscribe(val => {\n        this.options = val;\n      });\n    }\n\n    ngOnInit() {\n      this.http.get(configs.baseUrl + '/city/detail', this.httpOptions).subscribe(val => {\n        this.options = val;\n      });\n      this.filteredOptions = this.myControl.valueChanges.pipe(startWith(''), map(value => this._filter(value)));\n      this.populateGrid('indore');\n    }\n\n    _filter(value) {\n      const filterValue = value.toLowerCase();\n      this.http.get(configs.baseUrl + '/city/detail', this.httpOptions).subscribe(val => {\n        this.options = val;\n      });\n      return this.options.filter(option => option.toLowerCase().includes(filterValue));\n    }\n\n    onLogoClick() {\n      alert('hii');\n    }\n\n    onKeyUp(value) {\n      this.data.courseTitle = value;\n    }\n\n    populateGrid(select) {\n      this.http.get(configs.baseUrl + '/weather/detail?city=' + select, this.httpOptions).subscribe(val => {\n        var _a;\n\n        console.log(val);\n        this.weatherArr = val.weatherDayData;\n        this.dRowData = [];\n        var index = 0;\n        (_a = this.weatherArr) === null || _a === void 0 ? void 0 : _a.forEach(cValue => {\n          var dat = new Date(cValue.date);\n          this.record = {\n            Date: dat,\n            Day_Min_Temp: cValue.weatherInfo.tempMin,\n            Day_Max_Temp: cValue.weatherInfo.tempMax,\n            Wind_Speed: cValue.wind.speed,\n            Description: cValue.weather[0].description,\n            Suggestion: cValue.weatherInfo.suggestion != null ? cValue.weatherInfo.suggestion : 'Have a nice day',\n            City: select\n          };\n          this.dRowData[index] = this.record;\n          index++;\n        });\n        console.log('ddd');\n        console.log(this.rowData);\n        this.rowData = this.dRowData; //     this.rowData = [\n        //       { Date: 'Toyota', Day_Min_Temp: 'Celica', Day_Max_Temp: 35000 },\n        // { Date: 'Ford', Day_Min_Temp: 'Mondeo', Day_Max_Temp: 32000 }\n        //   ];\n      });\n    } // chart dialog \n\n\n    openDialog() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      this.dialog.open(ChartComponent, dialogConfig);\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 22,\n    vars: 10,\n    consts: [[\"role\", \"banner\", 1, \"toolbar\"], [2, \"margin-left\", \"100px\"], [1, \"spacer\"], [\"role\", \"main\", 1, \"content\"], [1, \"example-form\"], [\"appearance\", \"fill\", 1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Search\", \"aria-label\", \"City\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"autoActiveFirstOption\", \"\", 3, \"optionSelected\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"ag-theme-alpine\", 2, \"width\", \"1200px\", \"height\", \"500px\", 3, \"pagination\", \"paginationPageSize\", \"rowData\", \"columnDefs\", \"frameworkComponents\"], [3, \"value\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtext(2, \"Weather App\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵelementStart(6, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(7, \"mat-label\");\n        i0.ɵɵtext(8, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementStart(10, \"mat-autocomplete\", 7, 8);\n        i0.ɵɵlistener(\"optionSelected\", function AppComponent_Template_mat_autocomplete_optionSelected_10_listener($event) {\n          return ctx.populateGrid($event.option.value);\n        });\n        i0.ɵɵtemplate(12, AppComponent_mat_option_12_Template, 2, 2, \"mat-option\", 9);\n        i0.ɵɵpipe(13, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelement(17, \"ag-grid-angular\", 10);\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵelement(19, \"br\");\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"router-outlet\");\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(11);\n\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(13, 8, ctx.filteredOptions));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"pagination\", ctx.pagination)(\"paginationPageSize\", ctx.paginationPageSize)(\"rowData\", ctx.rowData)(\"columnDefs\", ctx.columnDefs)(\"frameworkComponents\", ctx.frameworkComponents);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i4.MatFormField, i4.MatLabel, i5.MatInput, i3.DefaultValueAccessor, i6.MatAutocompleteTrigger, i3.NgControlStatus, i3.FormControlDirective, i6.MatAutocomplete, i7.NgForOf, i8.AgGridAngular, i9.RouterOutlet, i10.MatOption],\n    pipes: [i7.AsyncPipe],\n    styles: [\"\", \"[_nghost-%COMP%] {\\n    font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    font-size: 14px;\\n    color: #333;\\n    box-sizing: border-box;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n\\n  h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%] {\\n    margin: 8px 0;\\n  }\\n\\n  p[_ngcontent-%COMP%] {\\n    margin: 0;\\n  }\\n\\n  .spacer[_ngcontent-%COMP%] {\\n    flex: 1;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%] {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    height: 60px;\\n    display: flex;\\n    align-items: center;\\n    background-color: #1976d2;\\n    color: white;\\n    font-weight: 600;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    margin: 0 16px;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%]   #twitter-logo[_ngcontent-%COMP%] {\\n    height: 40px;\\n    margin: 0 8px;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%]   #youtube-logo[_ngcontent-%COMP%] {\\n    height: 40px;\\n    margin: 0 16px;\\n  }\\n\\n  .toolbar[_ngcontent-%COMP%]   #twitter-logo[_ngcontent-%COMP%]:hover, .toolbar[_ngcontent-%COMP%]   #youtube-logo[_ngcontent-%COMP%]:hover {\\n    opacity: 0.8;\\n  }\\n\\n  .content[_ngcontent-%COMP%] {\\n    display: flex;\\n    margin: 82px auto 32px;\\n    padding: 0 16px;\\n    max-width: 960px;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\\n  svg.material-icons[_ngcontent-%COMP%] {\\n    height: 24px;\\n    width: auto;\\n  }\\n\\n  svg.material-icons[_ngcontent-%COMP%]:not(:last-child) {\\n    margin-right: 8px;\\n  }\\n\\n  .card[_ngcontent-%COMP%]   svg.material-icons[_ngcontent-%COMP%]   path[_ngcontent-%COMP%] {\\n    fill: #888;\\n  }\\n\\n  .card-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    margin-top: 16px;\\n  }\\n\\n  .card[_ngcontent-%COMP%] {\\n    all: unset;\\n    border-radius: 4px;\\n    border: 1px solid #eee;\\n    background-color: #fafafa;\\n    height: 40px;\\n    width: 200px;\\n    margin: 0 8px 16px;\\n    padding: 16px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n    align-items: center;\\n    transition: all 0.2s ease-in-out;\\n    line-height: 24px;\\n  }\\n\\n  .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(:last-child) {\\n    margin-right: 0;\\n  }\\n\\n  .card.card-small[_ngcontent-%COMP%] {\\n    height: 16px;\\n    width: 168px;\\n  }\\n\\n  .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(.highlight-card) {\\n    cursor: pointer;\\n  }\\n\\n  .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(.highlight-card):hover {\\n    transform: translateY(-3px);\\n    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\\n  }\\n\\n  .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(.highlight-card):hover   .material-icons[_ngcontent-%COMP%]   path[_ngcontent-%COMP%] {\\n    fill: rgb(105, 103, 103);\\n  }\\n\\n  .card.highlight-card[_ngcontent-%COMP%] {\\n    background-color: #1976d2;\\n    color: white;\\n    font-weight: 600;\\n    border: none;\\n    width: auto;\\n    min-width: 30%;\\n    position: relative;\\n  }\\n\\n  .card.card.highlight-card[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n    margin-left: 60px;\\n  }\\n\\n  svg#rocket[_ngcontent-%COMP%] {\\n    width: 80px;\\n    position: absolute;\\n    left: -10px;\\n    top: -24px;\\n  }\\n\\n  svg#rocket-smoke[_ngcontent-%COMP%] {\\n    height: calc(100vh - 95px);\\n    position: absolute;\\n    top: 10px;\\n    right: 180px;\\n    z-index: -10;\\n  }\\n\\n  a[_ngcontent-%COMP%], a[_ngcontent-%COMP%]:visited, a[_ngcontent-%COMP%]:hover {\\n    color: #1976d2;\\n    text-decoration: none;\\n  }\\n\\n  a[_ngcontent-%COMP%]:hover {\\n    color: #125699;\\n  }\\n\\n  .terminal[_ngcontent-%COMP%] {\\n    position: relative;\\n    width: 80%;\\n    max-width: 600px;\\n    border-radius: 6px;\\n    padding-top: 45px;\\n    margin-top: 8px;\\n    overflow: hidden;\\n    background-color: rgb(15, 15, 16);\\n  }\\n\\n  .terminal[_ngcontent-%COMP%]::before {\\n    content: \\\"\\\\2022 \\\\2022 \\\\2022\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    height: 4px;\\n    background: rgb(58, 58, 58);\\n    color: #c2c3c4;\\n    width: 100%;\\n    font-size: 2rem;\\n    line-height: 0;\\n    padding: 14px 0;\\n    text-indent: 4px;\\n  }\\n\\n  .terminal[_ngcontent-%COMP%]   pre[_ngcontent-%COMP%] {\\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\\n    color: white;\\n    padding: 0 1rem 1rem;\\n    margin: 0;\\n  }\\n\\n  .circle-link[_ngcontent-%COMP%] {\\n    height: 40px;\\n    width: 40px;\\n    border-radius: 40px;\\n    margin: 8px;\\n    background-color: white;\\n    border: 1px solid #eeeeee;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    cursor: pointer;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\\n    transition: 1s ease-out;\\n  }\\n\\n  .circle-link[_ngcontent-%COMP%]:hover {\\n    transform: translateY(-0.25rem);\\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  footer[_ngcontent-%COMP%] {\\n    margin-top: 8px;\\n    display: flex;\\n    align-items: center;\\n    line-height: 20px;\\n  }\\n\\n  footer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: center;\\n  }\\n\\n  .github-star-badge[_ngcontent-%COMP%] {\\n    color: #24292e;\\n    display: flex;\\n    align-items: center;\\n    font-size: 12px;\\n    padding: 3px 10px;\\n    border: 1px solid rgba(27,31,35,.2);\\n    border-radius: 3px;\\n    background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\\n    margin-left: 4px;\\n    font-weight: 600;\\n  }\\n\\n  .github-star-badge[_ngcontent-%COMP%]:hover {\\n    background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\\n    border-color: rgba(27,31,35,.35);\\n    background-position: -.5em;\\n  }\\n\\n  .github-star-badge[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%] {\\n    height: 16px;\\n    width: 16px;\\n    margin-right: 4px;\\n  }\\n\\n  svg#clouds[_ngcontent-%COMP%] {\\n    position: fixed;\\n    bottom: -160px;\\n    left: -230px;\\n    z-index: -10;\\n    width: 1920px;\\n  }\\n\\n  \\n  @media screen and (max-width: 767px) {\\n    .card-container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%]:not(.circle-link), .terminal[_ngcontent-%COMP%] {\\n      width: 100%;\\n    }\\n\\n    .card[_ngcontent-%COMP%]:not(.highlight-card) {\\n      height: 16px;\\n      margin: 8px 0;\\n    }\\n\\n    .card.highlight-card[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n      margin-left: 72px;\\n    }\\n\\n    svg#rocket-smoke[_ngcontent-%COMP%] {\\n      right: 120px;\\n      transform: rotate(-5deg);\\n    }\\n  }\\n\\n  @media screen and (max-width: 575px) {\\n    svg#rocket-smoke[_ngcontent-%COMP%] {\\n      display: none;\\n      visibility: hidden;\\n    }\\n  }\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}